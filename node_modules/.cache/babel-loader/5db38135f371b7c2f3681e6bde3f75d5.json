{"ast":null,"code":"import _slicedToArray from\"/Users/davidmcdougal/Practice/chat_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{sendMessage,isTyping}from'react-chat-engine';import{SendOutlined,PictureOutlined}from'@ant-design/icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MessageForm=function MessageForm(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var chatId=props.chatId,creds=props.creds;var handleSubmit=function handleSubmit(event){event.preventDefault();var text=value.trim();if(text.length>0)sendMessage(creds,chatId,{text:text});setValue('');};var handleChange=function handleChange(event){setValue(event.target.value);isTyping(props,chatId);};var handleUpload=function handleUpload(event){sendMessage(creds,chatId,{files:event.target.files,text:''});};return/*#__PURE__*/_jsxs(\"form\",{className:\"message-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{className:\"message-input\",placeholder:\"Send a message ...\",value:value,onChange:handleChange,onSubmit:handleSubmit}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"upload-button\",children:/*#__PURE__*/_jsx(\"span\",{className:\"image-button\",children:/*#__PURE__*/_jsx(PictureOutlined,{className:\"picture-icon\"})})}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",multiple:false,id:\"upload-button\",style:{display:'none'},onChange:handleUpload}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-button\",children:/*#__PURE__*/_jsx(SendOutlined,{className:\"send-icon\"})})]});};export default MessageForm;","map":{"version":3,"sources":["/Users/davidmcdougal/Practice/chat_app/src/components/MessageForm.jsx"],"names":["useState","sendMessage","isTyping","SendOutlined","PictureOutlined","MessageForm","props","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","handleChange","target","handleUpload","files","display"],"mappings":"6JAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,WAAT,CAAsBC,QAAtB,KAAqC,mBAArC,CACA,OAASC,YAAT,CAAuBC,eAAvB,KAA8C,mBAA9C,C,wFACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC3B,cAA0BN,QAAQ,CAAC,EAAD,CAAlC,wCAAOO,KAAP,eAAcC,QAAd,eACA,GAAQC,CAAAA,MAAR,CAA0BH,KAA1B,CAAQG,MAAR,CAAgBC,KAAhB,CAA0BJ,KAA1B,CAAgBI,KAAhB,CACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC3BA,KAAK,CAACC,cAAN,GAED,GAAMC,CAAAA,IAAI,CAAGP,KAAK,CAACQ,IAAN,EAAb,CAEA,GAAGD,IAAI,CAACE,MAAL,CAAc,CAAjB,CAAoBf,WAAW,CAACS,KAAD,CAAQD,MAAR,CAAgB,CAAEK,IAAI,CAAJA,IAAF,CAAhB,CAAX,CAEpBN,QAAQ,CAAC,EAAD,CAAR,CACH,CARD,CASA,GAAMS,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACL,KAAD,CAAW,CAC5BJ,QAAQ,CAACI,KAAK,CAACM,MAAN,CAAaX,KAAd,CAAR,CACAL,QAAQ,CAACI,KAAD,CAAQG,MAAR,CAAR,CACH,CAHD,CAKA,GAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACP,KAAD,CAAW,CAC5BX,WAAW,CAACS,KAAD,CAAQD,MAAR,CAAgB,CAAEW,KAAK,CAAER,KAAK,CAACM,MAAN,CAAaE,KAAtB,CAA6BN,IAAI,CAAE,EAAnC,CAAhB,CAAX,CACH,CAFD,CAIA,mBACI,cAAM,SAAS,CAAC,cAAhB,CAA+B,QAAQ,CAAEH,YAAzC,wBACI,cACI,SAAS,CAAC,eADd,CAEI,WAAW,CAAC,oBAFhB,CAGI,KAAK,CAAEJ,KAHX,CAII,QAAQ,CAAEU,YAJd,CAKI,QAAQ,CAAEN,YALd,EADJ,cAQI,cAAO,OAAO,CAAC,eAAf,uBACI,aAAM,SAAS,CAAC,cAAhB,uBACI,KAAC,eAAD,EAAiB,SAAS,CAAC,cAA3B,EADJ,EADJ,EARJ,cAaI,cACI,IAAI,CAAC,MADT,CAEI,QAAQ,CAAE,KAFd,CAGI,EAAE,CAAC,eAHP,CAII,KAAK,CAAE,CAAEU,OAAO,CAAE,MAAX,CAJX,CAKI,QAAQ,CAAEF,YALd,EAbJ,cAoBI,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,aAAhC,uBACI,KAAC,YAAD,EAAc,SAAS,CAAC,WAAxB,EADJ,EApBJ,GADJ,CA0BH,CA/CD,CAgDA,cAAed,CAAAA,WAAf","sourcesContent":["import { useState } from 'react';\nimport { sendMessage, isTyping} from 'react-chat-engine';\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\nconst MessageForm = (props) => {\n    const [value, setValue] = useState('');\n    const { chatId, creds } = props;\n    const handleSubmit = (event) => {\n         event.preventDefault();\n\n        const text = value.trim();\n\n        if(text.length > 0) sendMessage(creds, chatId, { text });\n\n        setValue('');\n    }\n    const handleChange = (event) => {\n        setValue(event.target.value);\n        isTyping(props, chatId);\n    }\n\n    const handleUpload = (event) => {\n        sendMessage(creds, chatId, { files: event.target.files, text: '' })\n    }\n   \n    return (\n        <form className=\"message-form\" onSubmit={handleSubmit}>\n            <input \n                className=\"message-input\"\n                placeholder=\"Send a message ...\"\n                value={value}\n                onChange={handleChange}\n                onSubmit={handleSubmit}\n            />\n            <label htmlFor=\"upload-button\">\n                <span className=\"image-button\">\n                    <PictureOutlined className=\"picture-icon\" />\n                </span>\n            </label>\n            <input \n                type=\"file\"\n                multiple={false}\n                id=\"upload-button\"\n                style={{ display: 'none'}}  \n                onChange={handleUpload}\n            />\n            <button type=\"submit\" className=\"send-button\">\n                <SendOutlined className=\"send-icon\" />\n            </button>\n        </form>\n    )\n}\nexport default MessageForm;"]},"metadata":{},"sourceType":"module"}